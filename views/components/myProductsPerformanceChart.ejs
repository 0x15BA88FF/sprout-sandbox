<canvas class="flex flex-col p-4 gap-2 bg-background-50 border-2 border-background-100 shadow-lg rounded-lg" id="myProductDemandChart"></canvas>

<script>
    const myProductDemandChartCTX = document.getElementById('myProductDemandChart').getContext('2d');
    function generateRandomColor() {
        // Generate random values for red, green, blue, and alpha channels
        const r = Math.floor(Math.random() * 256);
        const g = Math.floor(Math.random() * 256);
        const b = Math.floor(Math.random() * 256);
        const a = Math.random().toFixed(2); // Random alpha value between 0 and 1

        // Construct the RGBA color string
        const rgbaColor = `rgba(${r}, ${g}, ${b}, ${a})`;

        return rgbaColor;
    }
    function generateArrayOfColors(numColors) {
        const colors = [];
        for (let i = 0; i < numColors; i++) {
            colors.push(generateRandomColor());
        }
        return colors;
    }
    // Generate an array of 7 RGBA colors
    const arrayOfColors = generateArrayOfColors(2);
    console.log(arrayOfColors);

    let getProductData = async () => {
        try {
            let response = await fetch(`http://localhost:3000/getMyProductsDemand`);
            let result = await response.json();
            const productIds = result.map(item => { `${item}` });
            console.log(productIds)
            const dataValues = result.map();
            const data = {
                labels: productIds,
                datasets: [
                    {
                        label: 'Product Overall Performance',
                        data: [14, 34, 42, 46, 56],
                        backgroundColor: ["rgba(255,0,0,0.5)", "rgba(0,255,0,0.5)"],
                        hoverOffset: 4,
                        borderColor: '#262626',
                        borderRadius: 5,
                        borderWidth: 2,

                    }
                ]
            };
            const config = {
                type: 'bar',
                data: data,
                options: {
                    scales: {
                        y: { beginAtZero: true, grid: { display: false } },
                        x: { grid: { display: false } }
                    },
                }
            };
            const myChart = new Chart(myProductDemandChartCTX, config);

        } catch (error) {
            console.error('Error fetching data:', error);
        }
    };

    getProductData();
</script>