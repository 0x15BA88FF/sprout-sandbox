<select name="productSelect" id="productSelect">
</select>
<canvas class="flex flex-col p-4 gap-2 bg-background-50 border-2 border-background-100 shadow-lg rounded-lg" id="productPerformanceChart"></canvas>

<script>
    const productPerformanceChartCTX = document.getElementById('productPerformanceChart').getContext('2d');
    function generateRandomColor() {
        const r = Math.floor(Math.random() * 256);
        const g = Math.floor(Math.random() * 256);
        const b = Math.floor(Math.random() * 256);
        const a = Math.random().toFixed(2);

        return rgbaColor;
    }
    function generateArrayOfColors(numColors) {
        const colors = [];
        for (let i = 0; i < numColors; i++) {
            colors.push(generateRandomColor());
        }
        return colors;
    }
    const arrayOfColors = generateArrayOfColors(7);

    let getProductData = async () => {
        try {
            let id = "6664be3c35ea6bd07819ace5"
            let response = await fetch(`http://localhost:3000/getProductData/${ id }`);
            let result = await response.json();

            const labels = result.map(item => `${ item.date} `);
            const dataValues = result.map(item => item.quantity);
            const data = {
                labels: [1, 2, 3, 4, 5, 6, 7],
                datasets: [
                    {
                        label: 'Sales QTY of Product within last 7 days',
                        data: dataValues,
                        backgroundColor: arrayOfColors,
                        borderColor: arrayOfColors,
                        borderWidth: 1,
                        borderRadius: 5,
                        tension: 0.5,
                    }
                ]
            };

            const config = {
                type: 'line',
                data: data,
                options: {
                    scales: {
                        y: { beginAtZero: true, grid: { display: false } },
                        x: { grid: { display: false } }
                    },
                }
            };
            //CHART OBJ 
            const myChart = new Chart(productPerformanceChartCTX, config);

        } catch (error) {
            console.error('Error fetching data:', error);
        }
    };

    getProductData();

</script>